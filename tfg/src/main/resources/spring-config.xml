<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.1.xsd    
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <context:annotation-config/>
	<context:component-scan base-package="es.udc.fi.tfg.daos" />
	<context:component-scan base-package="es.udc.fi.tfg.services" />
	
	<tx:annotation-driven/>  
	
	
	<!--  DATASOURCE BEAN -->
	
	<!-- Externalizamos os parámetros da conexión a un ficheiro database.properties -->
	<context:property-placeholder location="database.properties" />
	
<beans>
	<bean id="miDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" 			 value="${jdbc.jdbcUrl}"/>
        <property name="username" 		 value="${jdbc.user}"/>
        <property name="password" 		 value="${jdbc.password}"/>
    </bean>
    
    
    <bean id="miSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="miDataSource"/>
        <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				
				<!--  Poñer a true se queremos que hibernate imprima as consultas SQL. -->
	        	<prop key="hibernate.show_sql">true</prop>
	        	<prop key="hibernate.format_sql">true</prop>
	        	<prop key="hibernate.use_sql_comments">true</prop>	 
	        	       	
				<prop key="hibernate.c3p0.min_size">5</prop>
				<prop key="hibernate.c3p0.max_size">20</prop>
				<prop key="hibernate.c3p0.timeout">300</prop>
				<prop key="hibernate.c3p0.max_statements">50</prop>
				<prop key="hibernate.c3p0.idle_test_period">3000</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				
				<!-- 
				hibernate.hbm2ddl.auto
				So the list of possible options are,
				validate: validate the schema, makes no changes to the database.
				update: update the schema.
				create: creates the schema, destroying previous data.
				create-drop: drop the schema at the end of the session. 
				 -->
 
        	</props>            
        </property>
        <!--  Usamos anotacións de Hibernate: hai que dicirlle ónde buscalas -->
        <property name="packagesToScan" value="es.udc.fi.tfg.model" />
    </bean>
    
    
    <bean id="miTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
    	<property name="sessionFactory" ref="miSessionFactory" />
  	</bean>

		
</beans>
    
    
    
    